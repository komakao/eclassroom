# Generated by Django 2.1.2 on 2019-05-21 11:26

import django.core.validators
from django.db import migrations, models
import django.utils.timezone
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CourseContentProgress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.IntegerField(default=0)),
                ('content_id', models.IntegerField(default=0)),
                ('progress', models.IntegerField(default=0)),
                ('start_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('finish_time', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Enroll',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.IntegerField(default=0)),
                ('classroom_id', models.IntegerField(default=0)),
                ('seat', models.IntegerField(default=0, verbose_name='座號')),
                ('computer', models.IntegerField(default=0, verbose_name='電腦')),
                ('group', models.IntegerField(default=-1)),
                ('groupshow', models.CharField(max_length=200, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:\\,\\d+)*\\Z'), code='invalid', message='Enter only digits separated by commas.')])),
                ('score_memo0', models.IntegerField(default=0)),
                ('score_memo1', models.IntegerField(default=0)),
                ('score_memo2', models.IntegerField(default=0)),
                ('score_memo0_custom', models.IntegerField(default=0)),
                ('score_memo1_custom', models.IntegerField(default=0)),
                ('score_memo2_custom', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='ExamAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('examwork_id', models.IntegerField(default=0)),
                ('question_id', models.IntegerField(default=0)),
                ('student_id', models.IntegerField(default=0)),
                ('answer', models.TextField(default='')),
                ('answer_right', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ExamWork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.IntegerField(default=0)),
                ('exam_id', models.IntegerField()),
                ('questions', models.TextField(default='')),
                ('publish', models.BooleanField(default=False)),
                ('publication_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('score', models.IntegerField(default=0)),
                ('scorer', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='ScratchAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.IntegerField(default=0)),
                ('lesson_id', models.IntegerField(default=0)),
                ('index', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='ScratchExam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam_id', models.IntegerField()),
                ('student_id', models.IntegerField()),
                ('answer', models.TextField()),
                ('score', models.IntegerField()),
                ('test_time', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='SFContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.IntegerField(default=0)),
                ('student_id', models.IntegerField(default=0)),
                ('work_id', models.IntegerField(default=0)),
                ('title', models.CharField(blank=True, max_length=250, null=True)),
                ('filename', models.CharField(blank=True, max_length=60, null=True)),
                ('publication_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('delete_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('visible', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='SFReply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.IntegerField(default=0)),
                ('work_id', models.IntegerField(default=0)),
                ('user_id', models.IntegerField(default=0)),
                ('memo', models.TextField(default='')),
                ('publication_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='SFWork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.IntegerField(default=0)),
                ('index', models.IntegerField(default=0)),
                ('memo', models.TextField(default='')),
                ('memo_e', models.IntegerField(default=0)),
                ('memo_c', models.IntegerField(default=0)),
                ('publish', models.BooleanField(default=False)),
                ('publication_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('reply_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('score', models.IntegerField(default=0)),
                ('scorer', models.IntegerField(default=0)),
                ('comment', models.TextField(blank=True, default='', null=True)),
                ('comment_publication_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('likes', models.TextField(default='')),
                ('like_count', models.IntegerField(default=0)),
                ('reply', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='SSpeculationContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.IntegerField(default=0)),
                ('student_id', models.IntegerField(default=0)),
                ('work_id', models.IntegerField(default=0)),
                ('title', models.CharField(blank=True, max_length=250, null=True)),
                ('filename', models.CharField(blank=True, max_length=60, null=True)),
                ('publication_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('delete_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('visible', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='SSpeculationWork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.IntegerField(default=0)),
                ('index', models.IntegerField()),
                ('memo', models.TextField(default='')),
                ('publish', models.BooleanField(default=False)),
                ('publication_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('reply_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('score', models.IntegerField(default=0)),
                ('scorer', models.IntegerField(default=0)),
                ('comment', models.TextField(blank=True, default='', null=True)),
                ('comment_publication_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('likes', models.TextField(default='')),
                ('like_count', models.IntegerField(default=0)),
                ('reply', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='StudentGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_id', models.IntegerField(default=0)),
                ('enroll_id', models.IntegerField(default=0)),
                ('group', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='StudentGroupLeader',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_id', models.IntegerField(default=0)),
                ('group', models.IntegerField(default=0)),
                ('enroll_id', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='TeamContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_id', models.IntegerField(default=0)),
                ('user_id', models.IntegerField(default=0)),
                ('types', models.IntegerField(default=0)),
                ('title', models.CharField(blank=True, max_length=250, null=True)),
                ('memo', models.TextField(default='')),
                ('link', models.CharField(blank=True, max_length=250, null=True)),
                ('youtube', models.CharField(blank=True, max_length=250, null=True)),
                ('youtube_length', models.IntegerField(default=0)),
                ('file', models.FileField(blank=True, null=True, upload_to='')),
                ('filename', models.CharField(blank=True, max_length=60, null=True)),
                ('publication_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('publish', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Work',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(default=0)),
                ('lesson', models.IntegerField(default=0)),
                ('typing', models.IntegerField(default=0)),
                ('index', models.IntegerField()),
                ('memo', models.TextField()),
                ('publication_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('score', models.IntegerField(default=-1)),
                ('scorer', models.IntegerField(default=0)),
                ('file', models.FileField(upload_to='')),
                ('comment', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='WorkAssistant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.IntegerField(default=0)),
                ('typing', models.IntegerField(default=0)),
                ('group', models.IntegerField(default=0)),
                ('index', models.IntegerField(default=0)),
                ('lesson', models.IntegerField(default=0)),
                ('classroom_id', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='WorkFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('work_id', models.IntegerField(default=0)),
                ('filename', models.TextField()),
                ('upload_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='WorkGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('typing', models.IntegerField(default=0)),
                ('classroom_id', models.IntegerField(default=0)),
                ('index', models.IntegerField(default=0)),
                ('group_id', models.IntegerField(default=0)),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='workgroup',
            unique_together={('classroom_id', 'index', 'typing')},
        ),
        migrations.AlterUniqueTogether(
            name='studentgroupleader',
            unique_together={('group_id', 'group')},
        ),
        migrations.AlterUniqueTogether(
            name='studentgroup',
            unique_together={('enroll_id', 'group_id')},
        ),
        migrations.AlterUniqueTogether(
            name='examanswer',
            unique_together={('student_id', 'examwork_id', 'question_id')},
        ),
        migrations.AlterUniqueTogether(
            name='enroll',
            unique_together={('classroom_id', 'student_id')},
        ),
        migrations.AlterUniqueTogether(
            name='coursecontentprogress',
            unique_together={('student_id', 'content_id')},
        ),
    ]
